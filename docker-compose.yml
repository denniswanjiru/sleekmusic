version: "3.9"
services:
  mongo:
    image: mongo:3.6.19-xenial
    restart: unless-stopped
    env_file: ./.env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD}
    ports:
      - ${MONGODB_LOCAL_PORT}:${MONGODB_DOCKER_PORT}
    volumes:
      - db:/data/db
    networks:
      - sleek-music

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGODB_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGODB_USER}:${MONGODB_PASSWORD}@${MONGODB_HOST}:${MONGODB_DOCKER_PORT}/
    networks:
      - sleek-music
      
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: sleek-backend
    depends_on:
      - mongo
    volumes:
      - './backend:/app'
      - '/app/node_modules'
    restart: always
    env_file: ./.env
    ports:
      - ${NODE_LOCAL_PORT}:${NODE_DOCKER_PORT}
    environment:
      - DB_HOST=mongodb
      - DB_USER=${MONGODB_USER}
      - DB_PASSWORD=${MONGODB_PASSWORD}
      - DB_NAME=${MONGODB_DATABASE}
      - DB_PORT=${MONGODB_DOCKER_PORT}
    networks:
      - sleek-music

  client: 
    build: 
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: sleek-client
    depends_on:
      - backend
    ports:
      - 3000:3000
    volumes:
      - './client:/app'
      - '/app/node_modules'
    environment:
      - CHOKIDAR_USEPOLLING=true
    restart: always
    stdin_open: true
    networks:
      - sleek-music

  # nginx:
  #   build:
  #     context: ./nginx
  #     dockerfile: Dockerfile.dev
  #   ports:
  #     - 7777:80
  #   depends_on: 
  #     - api
  #     - client
  #   container_name: sleek-nginx
  #   restart: always
  #   networks:
  #     - sleek-net

volumes:
  db:
    driver: local

networks:
  sleek-music:
    driver: bridge